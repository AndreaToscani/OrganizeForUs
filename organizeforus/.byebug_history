quit
quit 
compute_total_hours(merged_t_slots)
merged_t_slots
quit
members
compute_total_hours(merged_t_slots)
merged_t_slots
merge_t_slots
q
merged_t_slots
q
q√π
merged_t_slots.second
merged_t_slots
q
merged_t_slots.second
merged_t_slots.first
merged_t_slots
merged_slots
c
next
q
dataI.class
dataI
dataF
dataR
q
merged_t_slots
q
duration
hF
hI
dataF
dataI
group
t_slots
t_slot
slot
members
merged_t_slots
q
events.items
events
q
data.to_datetime.day
data.to_datetime.class == DateTime
data.to_datetime.class
data.to_datetime.class == 'DateTime'
data.to_datetime.class 
data.to_datetime.class == 'datetime'
data.to_datetime.class == 'datetiem'
(data+"16.07").to_datetime
(data+"16:07").to_datetime
data.to_datetime.DIOCANE
data.to_datetime.date
data.to_datetime
data.class
h
data
dt
q
merged_t_slots
q
res
c
q
res
c
next
c
q
res
c
q
c
r
res
c
q
res
r
c
r
c
r
q
res
c
r
res
c
res
r
q
c
q
dd
c
r
res
q
slots
member
members
r
res
q
y
q
r
res
q
r
res
q
r
k
k = r.delete([r.first.first,r.first.second])
r.delete([r.first.first,r.first.second])
r.include?([r.first.first,r.first.second])
r.include([r.first.first,r.first.second])?
[r.first.first,r.first.second].is_in(r)
[r.first.first,r.first.second].in(r)
[r.first.first,r.first.second]
  r - [r.first.first,r.first.second]
r
dd
cc
bb
aa
res
q
res
r - [cc,dd]
r
continue!
dd
cc
bb
aa
continue
dd
cc
bb
aa
continue
dd
cc
bb
aa
q
res
q
res
r
q
res
r
q
res
q
r
res
q
res
q
r
dd
cc
bb
aa
a
q
r
dd
cc
bb
aa
q
d
c
b
a
q
r.first.first.hour+(r.first.first.minute*0.01)
r.first.first.hour+r.first.first.minute*0.1
r.first.first.hour+"0."+r.first.first.minute
r.first.first.hour+r.first.first.minute+1
r.first.first.hour+r.first.first.minute
r.first.first.strftime("%k").to_i
r.first.first.strftime("%k%R").to_i
r.first.first.strftime("%k:%R").to_i
r.first.first.strftime("%k:%R").class
r.first.first.strftime("%k:%R")
r.first.first.to_time
r.first.first.hour
r.first.first.hours
r.first.first
r.first
r
q
y
q
r
q
r
q
y
q
slots.values_at(1).first.each do |slot| console.log(slot) end
slots.values_at(1).first.each do |slot|
slots.values_at(1).first
slots.values_at(1).first.first
slots.values_at(1).first
slots.values_at(2)
slots.values_at(1)
slots.values_at(user)
slots.first.values_at
slots.first.value_at
slots.first[1]
slots.first[0]
slots.first
slots.items
slots.tiems
slots.each
hI.class
h1.class
datetimeI.ctime
datetimeI.time
datetimeI.minute
datetimeI.hour
datetimeI.class.hour
datetimeI.class.help
datetimeI.class
datetimeI.?
datetimeI.date
datetimeI.time
datetimeI.class
datetimeI
slots.first[1][0][0].ctime
slots.first[1][0][0].time
slots.first[1][0][0].hour
slots.first[1][0][0].class
slots.first[1][0][0]
slots.first[1][0].class
slots.first[1][0]
slots.first[1]
slots.first.first
slots.first
slots
q
slots
q
slots
events
