continue
  session['devise.google_data'].extra.id_token
  session['devise.google_data'].extra
  session['devise.google_data'].credentials
  session['devise.google_data'].keys
  session['devise.google_data'].key
  session['devise.google_data']['id_token']
  session['devise.google_data'][0]
  session['devise.google_data'].email
  session['devise.google_data'].id_token
  session['devise.google_data']
continue
quit
session['devise.google_data']
https://lh3.googleusercontent.com/a/AATXAJxRYfqoEuHyTDQFNUszaaiEeeezLme09Ycgm5M6=s96-c
next
quit
session['devise.google_data']
@session['devise.google_data']
  session['devise.google_data']
@session[devise]
session
continue
User.all
User
@user.present?
@user.present
user.present
@user
@User
c
@user.avatar.blob
!@user.avatar.attached?
c
ActiveStorage::Blob.find_by(id: session[:blob_id])
ActiveStorage::Blob.find_by(id: session[:blob_id]
next
!@user.avatar.attached?
next
@user.avatar.blob
@user.avatar.nil?
c
@user.avatar.nil?
@user.avatar.blob
c
@user.avatar.nil?
@user.avatar.blob
@user.avatar
@user.avatar.attached?
c
ActiveStorage::Blob.find_by(signed_id: session[:blob_id])
session[:blob_id]
c
@user.avatar.blob
@user.avatar.attached?
c
@user.avatar.blob
@user.avatar.attached?
c
@user.avatar.attached?
less ActiveStorage::Blob.all
ActiveStorage::Blob.all
@user.avatar.blob
@user.avatar
c
@user.avatar
@user.avatar.attached?
c
@user.avatar.valid?
@user.avatar.representable?
@user.avatar.blob
@user.avatar.attached?
quit
c
@user.avatar.blob
@user.avatar.attached?
continue
@user.avatar.attached?
continue
ActiveStorage::Blob.all
@user.avatar.blob
@user.avatar.attached?
@user.avatar
continue
@user.avatar.attached?
ActiveStorage::Attachment.all
ActiveStorage::VariantRecord.all
ActiveStorage::Attachement.all
ActiveStorage::Blob.all
continue
ActiveStorage::Blob.all
ActiveStorage::Blob.find_by(id: 12)
ActiveStorage::Blob.find_by(id: 11)
ActiveStorage::VariantRecord.all
ActiveStorage::Attachment.all
ActiveStorage::Attachement.all
user_params
user_params[:avatar]
user_params[:avatar].nil?
@user.avatar.blob
@user.avatar.attached?
@user.avatar
continue
quit
file.content_type.split("/")[1]
file.content_type
quit
continue
quit
QUIT
@user.avatar.blob
@user.avatar
continue
user_params[:remove_image]
continue
@user.avatar.blob
@user.avatar.attached?
@user.avatar.valid?
@user.avatar
avatar
continue
@user.avatar
request.session[:blob_id]
continue
request.session[:blob_id]
@user.avatar.blob
@user.avatar.blob.attachable_sgid
@user.avatar.blob.attachable_sgid?
@user.avatar.blob.attachable?
@user.avatar.blob
@user.avatar
continue
@user.avatar.blob
continue
quit
continue
@user.avatar.representable?
@user.avatar
user_params[:avatar].nil? && !@user.avatar.attached?
user_params[:avatar].nil? && !@user.avarat.attached?
user_params[:avatar].nil?
!@user.avatar.attached?
@user.avatar.representable?
continue
next
continue
@user.avatar.blob
@user.avatar.representable?
continue
@user.avatar.representable?
@user.avatar.attached?
@user.avatar.blob
user_params[:avatar]
:avatar.nil?
:avatar
continue
@user.avatar.blob
@user.avatar
continue
@user.avatar.attached?
user_params[:avatar]
user_params[:avatar].nil?
@user.avatar.attached?
@user.avatar.blob
@user.avatar
continue
next
@user.avatar.representable?
@user.avatar
@user.avatar.blob
quit
@user.avatar.blob
@user.avatar
quit
@user.avatar.image?
@user.avatar.representable?
@user.avatar.attached?
quit
user_params[:user]
user_params[:user][:params]
user_params[:user][:filename]
user_params[:user][:filename
user_params[:user]
user_params[:avatar][:filename]
user_params[:avatar][:filename].content_type
user_params[:avatar].filename
user_params[:avatar].content_type
quit
params[:avatar]
user_params[:avatar]
params[:avatar]
@user.avatar
quit
user_params[:avatar]
@user.avatar
quit
session["devise.facebook_data"]["provider"]
session["devise.facebook_data"][:provider]
session["devise.facebook_data"]
@user.provider
quit
@user.provider
@user.provider = nil
@user.provider
user_params
@user.provider
@user.provider = 10
@user.provider
quit
request.session["devise.facebook_data"]
request.session[:blob_id]
request.session["omniauth.facebook_data"]
request.session["devise.facebook_data"]
request.session
quit
finish
help
q
ok
request.session
request.session["devise.facebook_data"]
request.session[:blob_id]
quit
a.avatar.attach(ActiveStorage::Blob.find_by(id: blob.id))
user.avatar.attach(ActiveStorage::Blob.fisnd_by(id: blob.id))
a = User.new()
@user.avatar.attached?
@user.attached?
user.avatar.attach(ActiveStorage::Blob.find_by(key: blob.key, checksum: blob.checksum))
@user.unattach
@user.detach
user.attach(ActiveStorage::Blob.find_by(key: blob.key, checksum: blob.checksum))
user.attach(ActiveStorage::Blob.find_by(key: blob.key)
user.attach(ActiveStorage::Blob.find_by(key: blob.key && checksum: blob.checksum)
user.attach(ActiveStorage::Blob.find_by(key: blob.key, checksum: blob.checksum)
user = User.new()
ActiveStorage::Blob.find_by(id: blob.id)user = User.new()
ActiveStorage::Blob.find_by(id: blob.id)
ActiveStorage::Blob.find_by(blob.id)
ActiveStorage::Blob.find_by(blob)
blob.find
@user.avatar
quit
request.session["devise.facebook_data"]
request.session["omniauth.facebook_data"]
request.session
quit
@user.avatar
user.avatar
next
request.session
exit
filename
file
exit
@user.avatar
